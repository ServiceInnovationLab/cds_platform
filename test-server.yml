---
- hosts: localhost
  connection: local
  roles:
    - { role: download_artifact, job_name: 'Delegations%20-%20Test%20Harness', artifact_name: 'test-harness-swarm.jar' }
    - { role: download_artifact, job_name: 'Delegations%20-%20Saml%20Broker', artifact_name: 'saml-broker-swarm.jar' }
  post_tasks:

    - name: Swagger UI
      get_url:
        url: '{{ swagger_ui.loc }}'
        dest: SOURCES/{{ swagger_ui.name }}.zip

- hosts: test
  become: yes
  roles:
    - test_harness
    - saml_broker

- hosts: test-web
  become: yes
  vars:
    host_ip: "{{ hostvars[inventory_hostname].ansible_host }}"
  pre_tasks:
    - name: Create test cert directory
      file:
        path: /etc/httpd/ssl/test
        state: directory

    # vagrant-specific set up
    - name: Install sso ssl/test certs
      copy:
        src: "staging/vagrant/files/ssl/test/{{ item }}"
        dest: "/etc/httpd/ssl/test/{{ item }}"
        mode: u=rw,g=,o=
      with_items:
        - webserver-chain.crt
        - webserver.crt
        - webserver.key
      when: not use_letsencrypt

    # should set up letsencrypt and renewals here
    - name: Symlink letsencrypt certs for test
      file:
        src: /etc/letsencrypt/live/test.{{ env }}.delegation.org.nz/{{ item.src }}
        dest: "/etc/httpd/ssl/test/{{ item.dest }}"
        state: link
      with_items:
        - src: chain.pem
          dest: webserver-chain.crt
        - src: cert.pem
          dest: webserver.crt
        - src: privkey.pem
          dest: webserver.key
      when: use_letsencrypt

  roles:
    - role: geerlingguy.apache
      apache_ports_configuration_items: [] #disable global listening port
      apache_restart_state: stopped
      apache_state: stopped
      apache_vhosts_filename: test-vhost.conf
      apache_listen_ip: "{{ host_ip }}"
      apache_global_vhost_settings: |
        {{ ansible_managed | comment }}
        Listen {{ host_ip }}:443
      apache_vhosts: []
      apache_vhosts_ssl:
        - servername: "{{ inventory_hostname }}"
          serveralias: "{{ inventory_hostname }}"
          certificate_file: ssl/test/webserver.crt
          certificate_key_file: ssl/test/webserver.key
          certificate_chain_file: ssl/test/webserver-chain.crt
          extra_parameters: |
            Header append X-UA-Compatible: IE=edge

            # Vagrant isn't protected by the gatekeeper, needs to have a regex for include optional to work
            IncludeOptional conf/access.con[f]

            ProxyPreserveHost On
            RequestHeader set X-Forwarded-Proto "https" env=HTTPS
            RequestHeader set X-Forwarded-Port "443" env=HTTPS

            ProxyPass /test-harness http://{{ test_host }}:8080/test-harness
            ProxyPassReverse /test-harness http://{{ test_host }}:8080/test-harness

            ProxyPass /fakeme http://{{ test_host }}:8090/fakeme
            ProxyPassReverse /fakeme http://{{ test_host }}:8090/fakeme

            ProxyPass /saml-broker http://{{ test_host }}:8100/saml-broker
            ProxyPassReverse /saml-broker http://{{ test_host }}:8100/saml-broker

            # Rewrite all cookies to have a prefix, and remove the prefix on the way back in
            Header edit Set-Cookie "^([^=]*)=([^;]*).*[pP]ath=([^;]*);" "{{ cookie_prefix }}_$1=$2; [dD]omain={{ cookie_domain }}; Path=$3; Secure; HttpOnly"
            RequestHeader edit* Cookie {{ cookie_prefix }}_([^=]*)=([^;]) "$1=$2"

  post_tasks:
    - seboolean:
        name: "{{ item }}"
        state: yes
        persistent: yes
      with_items:
        - httpd_can_network_connect

    - name: remove httpd default files
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /etc/httpd/conf.d/welcome.conf
        - /etc/httpd/conf.d/ssl.conf
        - /etc/httpd/conf.d/autoindex.conf
        - /etc/httpd/conf.d/userdir.conf

    - name: disable default listen
      lineinfile:
        dest: /etc/httpd/conf/httpd.conf
        regexp: '^(Listen.*)'
        line: '# \1'
        backrefs: yes

    - name: Swagger UI archive
      unarchive:
        src: SOURCES/{{ swagger_ui.name }}.zip
        dest: /tmp/

    - name: Swagger UI dist
      command: cp -r /tmp/{{ swagger_ui.name }}/dist /var/www/html/swagger

    - name: Apache restarted
      service:
        name: httpd
        state: restarted
